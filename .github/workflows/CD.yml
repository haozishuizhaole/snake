name: CD

on:
  push:
    tags:
      - 'v*-dev*'  # 例如 v1.0.0-dev

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build
        run: sh build.sh

      - name: Gather Release Information
        id: release_info
        run: |
          # 从 tag (例如 v1.0.0-dev) 提取版本号 (v1.0.0)
          VERSION=$(echo ${GITHUB_REF#refs/tags/} | sed 's/-dev.*//')
          # 检查对应的版本文件是否存在
          if [ ! -f "versions/${VERSION}.md" ]; then
           echo "Error: Version file versions/${VERSION}.md not found"
           exit 1
          fi
          
          # 导出
          echo "release_body_file=versions/${VERSION}.md" >> $GITHUB_OUTPUT
          echo "release_version=$(TZ=Asia/Shanghai date +'v%Y%m%d%H%M')" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.release_info.outputs.release_version }}
          tag: ${{ github.ref }}
          bodyFile: ${{steps.release_info.outputs.release_body_file}}
          draft: false
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}