name: CD

on:
  push:
    tags:
      - 'v*-dev*'  # 例如 v1.0.0-dev

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Build
        run: sh build.sh

      - name: Get version from tag
        id: get_version
        run: |
          # 从 tag (例如 v1.0.0-dev) 提取版本号 (v1.0.0)
          VERSION=$(echo ${{ github.ref_name }} | sed 's/-dev.*//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # 检查对应的版本文件是否存在
          if [ ! -f "versions/${VERSION}.md" ]; then
            echo "Error: Version file versions/${VERSION}.md not found"
            exit 1
          fi
          
          # 读取版本文件内容
          CONTENT=$(cat "versions/${VERSION}.md")
          # 将内容转换为 JSON 字符串并存储
          CONTENT="${CONTENT//'%'/'%25'}"
          CONTENT="${CONTENT//$'\n'/'%0A'}"
          CONTENT="${CONTENT//$'\r'/'%0D'}"
          echo "content=$CONTENT" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ steps.get_version.outputs.version }}
          body: ${{ steps.get_version.outputs.content }}
          draft: false
          prerelease: true
